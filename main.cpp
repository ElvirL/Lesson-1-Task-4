/*
Задание 4. Разработка детектора PNG-файла
Что нужно сделать
Разработайте программу, которая получает на вход, в стандартный ввод, путь к файлу. На выходе программа должна определить, 
является ли данный файл PNG-изображением. Данная процедура не просто должна смотреть на расширение файла, но и произвести 
минимальный анализ его внутренностей, в бинарном режиме.
Внутренности валидного бинарного файла начинаются со специального 8-байтового заголовка. Нас будут интересовать первые четыре байта. 
Первый байт всегда имеет значение ?119 (число со знаком минус), а следующие — это просто символы ‘P’, ‘N’, ‘G’, расположенные друг за 
другом. Обратите внимание, что все они в верхнем регистре.
По результатам проверки пути и внутренностей требуется сообщить пользователю о результате проверки в стандартный вывод.

Советы и рекомендации
Чтобы определить расширение файла, используйте функцию substr, которая получает офсет и длину подстроки и возвращает её.

Что оценивается
Для произвольных путей файлов, введённых пользователем, требуется выдавать корректный результат — являются ли они PNG-файлами или нет.

Как отправить работу на проверку
Прислать ссылку на repl.it или файл .срр с решением.
*/

#include <iostream>
#include <fstream>
#include <string>

using namespace std;

int main(){
    setlocale(LC_ALL, "Russian");
    cout << "Введите путь к файлу: ";
    string path;
    cin >> path;

    ifstream in_file;
    in_file.open(path, ios::binary);
    if (in_file.is_open()){
        if (path.substr(path.size() - 3,3) == "png"){
            char buffer[4];
            in_file.read(buffer,sizeof(buffer));

            if (buffer[0] != -119 || buffer[1] != 'P' || buffer[2] != 'N' || buffer [3] != 'G'){
                cout << "Файл не является PNG-изображением" << endl;
            }
            else {
                cout << "Файл является PNG-изображением" << endl;
            }
        }
        else {
            cout << "Файл не является PNG-изображением" << endl;
        }
    }
    else {
        cout << "Файл невозможно открыть!" << endl;
    }
    in_file.close();

}